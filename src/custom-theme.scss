
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

$corporative-palette: (
 50: #DCEBEB, /**/
 100: #93E1D1,
 200: #49D6B6,
 300: #00CC9C, /**/
 400: #00B999,
 500: #00A596, /**/
 600: #009192,
 700: #007E8E, /**/
 800: #00748F,
 900: #006991, /**/
 contrast: (
   50: rgba(black, 0.87),
   100: rgba(black, 0.87),
   200: rgba(black, 0.87),
   300: rgba(black, 0.87),
   400: white,
   500: white,
   600: white,
   700: white,
   800: white,
   900: white,
 )
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$LGJ_FrontEnd-primary: mat.define-palette($corporative-palette, 500, 700);
$LGJ_FrontEnd-accent: mat.define-palette(mat.$amber-palette, A200, A100, A400);
// The warn palette is optional (defaults to red).
$LGJ_FrontEnd-warn: mat.define-palette(mat.$red-palette);

$LGJ_FrontEnd-typography: mat.define-typography-config(
  $font-family: "'Urbanist', 'Helvetica', 'Roboto', sans-serif",
  $display-4: mat.define-typography-level(1.5em, 1.2em, 400),
  $display-3: mat.define-typography-level(1.25em, 1.2em, 400),
  $display-2: mat.define-typography-level(0.9em, 1.2em 400),
  $display-1: mat.define-typography-level(0.8em, 1.2em, 400),
  $headline: mat.define-typography-level(2em, 1.2em, 600), //h1
  $title: mat.define-typography-level(1.5em, 1.2em, 600), //h2
  $subheading-2: mat.define-typography-level(1.25em, 1.2em, 600), //h3
  $subheading-1: mat.define-typography-level(1em, 1.2em, 600), //h4
  $body-1: mat.define-typography-level(1em, 1.2em, 400), //base
  $body-2: mat.define-typography-level(1em, 1.2em, 600), //base bold
  $caption: mat.define-typography-level(0.75em, 1em, 400),
  $button: mat.define-typography-level(1rem, 1.2em, 600),
);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$LGJ_FrontEnd-theme: mat.define-light-theme((
  color: (
    primary: $LGJ_FrontEnd-primary,
    accent: $LGJ_FrontEnd-accent,
    warn: $LGJ_FrontEnd-warn
  ),
  typography: $LGJ_FrontEnd-typography,
));

$LGJ_FrontEnd-dark-theme: mat.define-dark-theme((
  color: (
    primary: $LGJ_FrontEnd-primary,
    accent: $LGJ_FrontEnd-accent,
    warn: $LGJ_FrontEnd-warn
  ),
  typography: $LGJ_FrontEnd-typography,
));


// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.core-theme($LGJ_FrontEnd-theme);
@include mat.all-component-themes($LGJ_FrontEnd-theme);
@include mat.core($LGJ_FrontEnd-typography);
@include mat.sidenav-theme($LGJ_FrontEnd-dark-theme);

.dark-theme {
  // $LGJ_FrontEnd-primary: mat.define-palette($corporative-palette, 300, 500);  
  @include mat.core-theme($LGJ_FrontEnd-dark-theme);
  @include mat.all-component-themes($LGJ_FrontEnd-dark-theme);
}

.mat-corporative-normal{
  color: var(--primary-color);
}

.mat-gradient {
  background: var(--primary-background-color);
  color: white;
}

.mat-success {
  color: #70D36D;
}

.mat-drawer-container, .mat-card {
  background: var(--background-paper);
  color: var(--text-color-primary);
}